{"name": "test_for_users_update", "status": "failed", "statusDetails": {"message": "AssertionError: Response does not have expected fields: ['data1']", "trace": "@allure.feature(\"Update a User\")\n    @allure.story(\"Authorized user can update users information\")\n    @allure.severity(allure.severity_level.BLOCKER)\n    def test_for_users_update():\n    \n        response = helper.put_request(url=PUT_URL + '/' + str(user_id),\n                                              body={'name':'Abhishek Yadav', 'gender':'Male',\n                                                    'email':'yabhishek@outlook.com', 'status':'Inactive'})\n    \n        check.response_has_status_code(response, 200)\n        check.response_has_field_with_value(response, 'code', 200)\n        check.response_has_fields(\n            response,\n>           'data1'\n        )\n\nresponse   = <Response [200]>\n\ntest.py:104: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nresponse = <Response [200]>, fields = ('data1',), missing_fields = ['data1']\n\n    def response_has_fields(response, *fields):\n        with allure.step(f'Check response jsondata have all of {fields} fields'):\n            jsondata = response.json()\n            missing_fields = [field for field in fields if jsondata.get(field) is None]\n>           assert not missing_fields, f'Response does not have expected fields: {missing_fields}'\nE           AssertionError: Response does not have expected fields: ['data1']\n\nfields     = ('data1',)\njsondata   = {'code': 200,\n 'data': {'created_at': '2021-05-10T04:09:58.337+05:30',\n          'email': 'yabhishek@outlook.com',\n          'gender': 'Male',\n          'id': 1396,\n          'name': 'Abhishek Yadav',\n          'status': 'Inactive',\n          'updated_at': '2021-05-10T04:10:43.386+05:30'},\n 'meta': None}\nmissing_fields = ['data1']\nresponse   = <Response [200]>\n\n..\\testlib\\check.py:51: AssertionError"}, "steps": [{"name": "Send PUT request by authorized user to url:\n https://gorest.co.in/public-api/users/1396", "status": "passed", "attachments": [{"source": "c6e5ab93-6c00-4097-8dcc-704b9c41f1b9-attachment.attach"}, {"source": "1a03e688-f544-4f2e-9fa8-50d76eecdbbd-attachment.attach"}], "start": 1620600042936, "stop": 1620600043351}, {"name": "Check response has one of (200,) status code", "status": "passed", "start": 1620600043352, "stop": 1620600043352}, {"name": "Check response jsondata have code field with 200 value", "status": "passed", "start": 1620600043352, "stop": 1620600043352}, {"name": "Check response jsondata have all of ('data1',) fields", "status": "failed", "statusDetails": {"message": "AssertionError: Response does not have expected fields: ['data1']\n", "trace": "  File \"D:\\MyWorkspace\\api_tests_python_allure\\testlib\\check.py\", line 51, in response_has_fields\n    assert not missing_fields, f'Response does not have expected fields: {missing_fields}'\n"}, "start": 1620600043352, "stop": 1620600043352}], "start": 1620600042936, "stop": 1620600043354, "uuid": "79042aa4-958b-4516-ad0d-e33f429fa23c", "historyId": "6b3054cb62dc7a55307a9051117daa2e", "testCaseId": "551dd67b8ae93505bce81ea5c840d9b7", "fullName": "tests.test#test_for_users_update", "labels": [{"name": "severity", "value": "blocker"}, {"name": "story", "value": "Authorized user can update users information"}, {"name": "feature", "value": "Update a User"}, {"name": "parentSuite", "value": "tests"}, {"name": "suite", "value": "test"}, {"name": "host", "value": "abhishekkyd"}, {"name": "thread", "value": "24488-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "tests.test"}]}