{"name": "test_for_users_add", "status": "broken", "statusDetails": {"message": "TypeError: 'int' object is not subscriptable", "trace": "@allure.feature(\"Create a User\")\n    @allure.story(\"Authorized user can add users information\")\n    @allure.severity(allure.severity_level.BLOCKER)\n    def test_for_users_add():\n    \n        response = helper.post_request(url=POST_URL,\n                                              body={'name':'Abhishek Yadav', 'gender':'Male',\n                                                    'email':'yabhishek2@outlook.com', 'status':'Active'})\n    \n        check.response_has_status_code(response, 200)\n        check.response_has_field_with_value(response, 'code', 201)\n        check.response_has_fields(\n            response,\n            'data'\n        )\n>       user_id = helper.get_user_id_from_response(response)\n\nresponse   = <Response [200]>\n\ntest.py:43: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nresponse = <Response [200]>\n\n    def get_user_id_from_response(response):\n        res = json.loads(response.text)\n>       user_id = res['data']['id'][0]\nE       TypeError: 'int' object is not subscriptable\n\nres        = {'code': 201,\n 'data': {'created_at': '2021-05-10T03:51:15.715+05:30',\n          'email': 'yabhishek2@outlook.com',\n          'gender': 'Male',\n          'id': 1383,\n          'name': 'Abhishek Yadav',\n          'status': 'Active',\n          'updated_at': '2021-05-10T03:51:15.715+05:30'},\n 'meta': None}\nresponse   = <Response [200]>\n\n..\\testlib\\helper.py:38: TypeError"}, "steps": [{"name": "Send POST request by authorized user to url:\n https://gorest.co.in/public-api/users", "status": "passed", "attachments": [{"source": "4c23e958-18dd-4699-94a5-d051db67c874-attachment.attach"}, {"source": "52f30f74-f15d-4f89-a303-70a27e76bb2b-attachment.attach"}], "start": 1620598875240, "stop": 1620598875695}, {"name": "Check response has one of (200,) status code", "status": "passed", "start": 1620598875695, "stop": 1620598875695}, {"name": "Check response jsondata have code field with 201 value", "status": "passed", "start": 1620598875695, "stop": 1620598875696}, {"name": "Check response jsondata have all of ('data',) fields", "status": "passed", "start": 1620598875696, "stop": 1620598875696}], "start": 1620598875240, "stop": 1620598875697, "uuid": "d0a8cc75-260a-48cc-83a7-de689ddce3a2", "historyId": "8a23fe126d735ad0c7d9aa3a5d83d99a", "testCaseId": "ab0c4275d0185bad95fbe3a524f162af", "fullName": "tests.test#test_for_users_add", "labels": [{"name": "feature", "value": "Create a User"}, {"name": "story", "value": "Authorized user can add users information"}, {"name": "severity", "value": "blocker"}, {"name": "parentSuite", "value": "tests"}, {"name": "suite", "value": "test"}, {"name": "host", "value": "abhishekkyd"}, {"name": "thread", "value": "7776-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "tests.test"}]}