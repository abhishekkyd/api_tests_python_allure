{"name": "test_for_user_details", "status": "broken", "statusDetails": {"message": "KeyError: 0", "trace": "@allure.feature(\"Get Users\")\n    @allure.story(\"Authorized user can see users information\")\n    @allure.severity(allure.severity_level.BLOCKER)\n    def test_for_user_details():\n    \n        response = helper.get_request(url=GET_URL + '/' + str(user_id))\n    \n        check.response_has_status_code(response, 200)\n        check.response_has_field_with_value(response, 'code', 200)\n        check.response_has_fields(\n            response,\n            'data'\n        )\n>       check.response_has_field_value(response, \"id\", user_id)\n\nresponse   = <Response [200]>\n\ntest.py:77: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nresponse = <Response [200]>, field = 'id', expected_value = 2001\n\n    def response_has_field_value(response, field, expected_value):\n        with allure.step(f'Check response has one of {expected_value} expected value'):\n            res = json.loads(response.text)\n>           actual_value = res['data'][0]\nE           KeyError: 0\n\nexpected_value = 2001\nfield      = 'id'\nres        = {'code': 200,\n 'data': {'created_at': '2021-05-10T02:45:28.244+05:30',\n          'email': 'yabhishek1@outlook.com',\n          'gender': 'Male',\n          'id': 2001,\n          'name': 'Abhishek Yadav',\n          'status': 'Active',\n          'updated_at': '2021-05-10T02:45:28.244+05:30'},\n 'meta': None}\nresponse   = <Response [200]>\n\n..\\testlib\\check.py:17: KeyError"}, "steps": [{"name": "Send GET request by authorized user to url:\n https://gorest.co.in/public-api/users/2001", "status": "passed", "attachments": [{"source": "279ad39b-aed5-4b03-9eac-825d46ec46bb-attachment.attach"}, {"source": "3152c659-5965-4ebf-942a-460a31f58d0d-attachment.attach"}], "start": 1620598387406, "stop": 1620598387824}, {"name": "Check response has one of (200,) status code", "status": "passed", "start": 1620598387824, "stop": 1620598387824}, {"name": "Check response jsondata have code field with 200 value", "status": "passed", "start": 1620598387824, "stop": 1620598387824}, {"name": "Check response jsondata have all of ('data',) fields", "status": "passed", "start": 1620598387824, "stop": 1620598387824}, {"name": "Check response has one of 2001 expected value", "status": "broken", "statusDetails": {"message": "KeyError: 0\n", "trace": "  File \"D:\\MyWorkspace\\api_tests_python_allure\\testlib\\check.py\", line 17, in response_has_field_value\n    actual_value = res['data'][0]\n"}, "start": 1620598387824, "stop": 1620598387824}], "start": 1620598387406, "stop": 1620598387825, "uuid": "b9f8afdc-2ec2-4256-a3b7-ff3ad9e486fc", "historyId": "360b254595609a95849a89f3cee88e61", "testCaseId": "ec0615cafc580613bad36ca3d6200550", "fullName": "tests.test#test_for_user_details", "labels": [{"name": "story", "value": "Authorized user can see users information"}, {"name": "feature", "value": "Get Users"}, {"name": "severity", "value": "blocker"}, {"name": "parentSuite", "value": "tests"}, {"name": "suite", "value": "test"}, {"name": "host", "value": "abhishekkyd"}, {"name": "thread", "value": "16292-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "tests.test"}]}