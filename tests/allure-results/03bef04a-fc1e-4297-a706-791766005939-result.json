{"name": "test_for_user_details", "status": "failed", "statusDetails": {"message": "AssertionError: \n            Expected value: yabhishek@outlook.com\n            Actual value: {'id': 2001, 'name': 'Abhishek Yadav', 'email': 'yabhishek1@outlook.com', 'gender': 'Male', 'status': 'Active', 'created_at': '2021-05-10T02:45:28.244+05:30', 'updated_at': '2021-05-10T02:45:28.244+05:30'}", "trace": "@allure.feature(\"Get Users\")\n    @allure.story(\"Authorized user can see users information\")\n    @allure.severity(allure.severity_level.BLOCKER)\n    def test_for_user_details():\n    \n        response = helper.get_request(url=GET_URL + '/' + str(user_id))\n    \n        check.response_has_status_code(response, 200)\n        check.response_has_field_with_value(response, 'code', 200)\n        check.response_has_fields(\n            response,\n            'data'\n        )\n        # check.response_has_field_value(response, \"id\", user_id)\n        check.response_has_field_value(response, \"name\", 'Abhishek Yadav')\n>       check.response_has_field_value(response, \"email\", 'yabhishek@outlook.com')\n\nresponse   = <Response [200]>\n\ntest.py:79: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nresponse = <Response [200]>, field = 'email'\nexpected_value = 'yabhishek@outlook.com'\n\n    def response_has_field_value(response, field, expected_value):\n        with allure.step(f'Check response has one of {expected_value} expected value'):\n            res = json.loads(response.text)\n            actual_value = res['data']\n            assert actual_value[field] in expected_value, f'''\n                Expected value: {expected_value}\n                Actual value: {actual_value}\n>           '''\nE           AssertionError: \nE                       Expected value: yabhishek@outlook.com\nE                       Actual value: {'id': 2001, 'name': 'Abhishek Yadav', 'email': 'yabhishek1@outlook.com', 'gender': 'Male', 'status': 'Active', 'created_at': '2021-05-10T02:45:28.244+05:30', 'updated_at': '2021-05-10T02:45:28.244+05:30'}\n\nactual_value = {'created_at': '2021-05-10T02:45:28.244+05:30',\n 'email': 'yabhishek1@outlook.com',\n 'gender': 'Male',\n 'id': 2001,\n 'name': 'Abhishek Yadav',\n 'status': 'Active',\n 'updated_at': '2021-05-10T02:45:28.244+05:30'}\nexpected_value = 'yabhishek@outlook.com'\nfield      = 'email'\nres        = {'code': 200,\n 'data': {'created_at': '2021-05-10T02:45:28.244+05:30',\n          'email': 'yabhishek1@outlook.com',\n          'gender': 'Male',\n          'id': 2001,\n          'name': 'Abhishek Yadav',\n          'status': 'Active',\n          'updated_at': '2021-05-10T02:45:28.244+05:30'},\n 'meta': None}\nresponse   = <Response [200]>\n\n..\\testlib\\check.py:31: AssertionError"}, "steps": [{"name": "Send GET request by authorized user to url:\n https://gorest.co.in/public-api/users/2001", "status": "passed", "attachments": [{"source": "8ba8cb23-45d6-40bd-a95e-22e8ad653c90-attachment.attach"}, {"source": "abe2dfd4-2e97-4677-8da4-4c9c06019246-attachment.attach"}], "start": 1620598471135, "stop": 1620598471536}, {"name": "Check response has one of (200,) status code", "status": "passed", "start": 1620598471536, "stop": 1620598471536}, {"name": "Check response jsondata have code field with 200 value", "status": "passed", "start": 1620598471536, "stop": 1620598471536}, {"name": "Check response jsondata have all of ('data',) fields", "status": "passed", "start": 1620598471536, "stop": 1620598471536}, {"name": "Check response has one of Abhishek Yadav expected value", "status": "passed", "start": 1620598471536, "stop": 1620598471536}, {"name": "Check response has one of yabhishek@outlook.com expected value", "status": "failed", "statusDetails": {"message": "AssertionError: \n            Expected value: yabhishek@outlook.com\n            Actual value: {'id': 2001, 'name': 'Abhishek Yadav', 'email': 'yabhishek1@outlook.com', 'gender': 'Male', 'status': 'Active', 'created_at': '2021-05-10T02:45:28.244+05:30', 'updated_at': '2021-05-10T02:45:28.244+05:30'}\n        \n", "trace": "  File \"D:\\MyWorkspace\\api_tests_python_allure\\testlib\\check.py\", line 31, in response_has_field_value\n    '''\n"}, "start": 1620598471536, "stop": 1620598471536}], "start": 1620598471135, "stop": 1620598471536, "uuid": "fbd5cb66-59d3-4473-addf-e6a9618e4f83", "historyId": "360b254595609a95849a89f3cee88e61", "testCaseId": "ec0615cafc580613bad36ca3d6200550", "fullName": "tests.test#test_for_user_details", "labels": [{"name": "story", "value": "Authorized user can see users information"}, {"name": "severity", "value": "blocker"}, {"name": "feature", "value": "Get Users"}, {"name": "parentSuite", "value": "tests"}, {"name": "suite", "value": "test"}, {"name": "host", "value": "abhishekkyd"}, {"name": "thread", "value": "11140-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "tests.test"}]}