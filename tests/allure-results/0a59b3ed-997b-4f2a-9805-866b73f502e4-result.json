{"name": "test_for_user_details", "status": "failed", "statusDetails": {"message": "AssertionError: Response does not have expected gender field", "trace": "@allure.feature(\"Get Users\")\n    @allure.story(\"Authorized user can see users information\")\n    @allure.severity(allure.severity_level.BLOCKER)\n    def test_for_user_details():\n    \n        response = helper.get_request(url=GET_URL + '/' + str(user_id))\n    \n        check.response_has_status_code(response, 200)\n        check.response_has_field_with_value(response, 'code', 200)\n        check.response_has_fields(\n            response,\n            'data'\n        )\n>       check.response_has_field_with_value(response, \"gender\", 'Male')\n\nresponse   = <Response [200]>\n\ntest.py:75: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nresponse = <Response [200]>, field = 'gender', value = 'Male'\n\n    def response_has_field_with_value(response, field, value):\n        with allure.step(f'Check response jsondata have {field} field with {value} value'):\n            actual_field_value = response.json().get(field)\n>           assert actual_field_value, f'Response does not have expected {field} field'\nE           AssertionError: Response does not have expected gender field\n\nactual_field_value = None\nfield      = 'gender'\nresponse   = <Response [200]>\nvalue      = 'Male'\n\n..\\testlib\\check.py:50: AssertionError"}, "steps": [{"name": "Send GET request by authorized user to url:\n https://gorest.co.in/public-api/users/2001", "status": "passed", "attachments": [{"source": "eddce6a1-e371-4b08-a205-1e2f6d59b014-attachment.attach"}, {"source": "732391af-ba91-4052-9a4a-3b5c4328b37b-attachment.attach"}], "start": 1620597786282, "stop": 1620597786892}, {"name": "Check response has one of (200,) status code", "status": "passed", "start": 1620597786892, "stop": 1620597786892}, {"name": "Check response jsondata have code field with 200 value", "status": "passed", "start": 1620597786892, "stop": 1620597786892}, {"name": "Check response jsondata have all of ('data',) fields", "status": "passed", "start": 1620597786892, "stop": 1620597786892}, {"name": "Check response jsondata have gender field with Male value", "status": "failed", "statusDetails": {"message": "AssertionError: Response does not have expected gender field\n", "trace": "  File \"D:\\MyWorkspace\\api_tests_python_allure\\testlib\\check.py\", line 50, in response_has_field_with_value\n    assert actual_field_value, f'Response does not have expected {field} field'\n"}, "start": 1620597786892, "stop": 1620597786892}], "start": 1620597786282, "stop": 1620597786893, "uuid": "0a5cf3ec-c8be-4e48-8749-ee8a2272aec4", "historyId": "360b254595609a95849a89f3cee88e61", "testCaseId": "ec0615cafc580613bad36ca3d6200550", "fullName": "tests.test#test_for_user_details", "labels": [{"name": "severity", "value": "blocker"}, {"name": "feature", "value": "Get Users"}, {"name": "story", "value": "Authorized user can see users information"}, {"name": "parentSuite", "value": "tests"}, {"name": "suite", "value": "test"}, {"name": "host", "value": "abhishekkyd"}, {"name": "thread", "value": "24316-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "tests.test"}]}